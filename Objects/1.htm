<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Jan 28 14:56:56 2020
<BR><P>
<H3>Maximum Stack Usage =        108 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; LTC6811_Mission &rArr; LTC6811_MoveData &rArr; pec15
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[45]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">MemManage_Handler</a><BR>
 <LI><a href="#[9]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">BusFault_Handler</a><BR>
 <LI><a href="#[a]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">UsageFault_Handler</a><BR>
 <LI><a href="#[b]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SVC_Handler</a><BR>
 <LI><a href="#[c]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">DebugMon_Handler</a><BR>
 <LI><a href="#[d]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">PendSV_Handler</a><BR>
 <LI><a href="#[25]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[25]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">CAN_IRQHandler</a> from can.o(i.CAN_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">EINT3_IRQHandler</a> from main.o(i.EINT3_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C0_IRQHandler</a> from i2c.o(i.I2C0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">RTC_IRQHandler</a> from rtc.o(i.RTC_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">SPI_6811_PutArray</a> from spi.o(i.SPI_6811_PutArray) referenced 2 times from 6811.o(.data)
 <LI><a href="#[1c]">SPI_IRQHandler</a> from spi.o(i.SPI_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[32]">SystemInit</a> from system_lpc17xx.o(i.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[10]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART1_IRQHandler</a> from uart.o(i.UART1_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">UART2_IRQHandler</a> from uart.o(i.UART2_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">UART3_IRQHandler</a> from uart.o(i.UART3_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[34]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[34]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[35]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[37]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[92]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[93]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[38]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[95]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[96]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[97]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[98]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[99]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ab]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ad]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[36]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[b1]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[39]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b2]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LTC6811_Mission &rArr; LTC6811_MoveData &rArr; pec15
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b3]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[46]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[40]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b4]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[42]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3f]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[bb]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bc]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[bd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>AD7124_CH_VoltGet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ad7124.o(i.AD7124_CH_VoltGet))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
</UL>

<P><STRONG><a name="[24]"></a>EINT3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.EINT3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>AD7124_Read_DATA</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ad7124.o(i.AD7124_Read_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AD7124_Read_DATA &rArr; SSP1_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PutArray
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
</UL>

<P><STRONG><a name="[49]"></a>AD7124_UartSend</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, ad7124.o(i.AD7124_UartSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AD7124_UartSend &rArr; uart1_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>AD7124_Write_CHANNEL</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ad7124.o(i.AD7124_Write_CHANNEL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AD7124_Write_CHANNEL &rArr; SSP1_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PutArray
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
</UL>

<P><STRONG><a name="[4d]"></a>AD7124_Write_CONFIGURATION</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ad7124.o(i.AD7124_Write_CONFIGURATION))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AD7124_Write_CONFIGURATION &rArr; SSP1_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PutArray
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
</UL>

<P><STRONG><a name="[4e]"></a>AD7124_Write_FILTER</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ad7124.o(i.AD7124_Write_FILTER))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AD7124_Write_FILTER &rArr; SSP1_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PutArray
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
</UL>

<P><STRONG><a name="[4f]"></a>AD7124_mission</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, ad7124.o(i.AD7124_mission))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AD7124_mission &rArr; AD7124_Write_CONFIGURATION &rArr; SSP1_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Write_FILTER
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Write_CONFIGURATION
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Write_CHANNEL
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Read_DATA
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_CH_VoltGet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PutArray
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>Array_Check</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bat.o(i.Array_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Array_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>BAT</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, bat.o(i.BAT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BAT &rArr; Current_get
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remain_CAP_Percent_get
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Current_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Voltage_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>BAT_Protect_Status_get_slow</STRONG> (Thumb, 370 bytes, Stack size 8 bytes, bat.o(i.BAT_Protect_Status_get_slow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BAT_Protect_Status_get_slow
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>BAT_UartSend</STRONG> (Thumb, 2842 bytes, Stack size 40 bytes, bat.o(i.BAT_UartSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BAT_UartSend &rArr; uart1_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>BAT_Voltage_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, bat.o(i.BAT_Voltage_get))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT
</UL>

<P><STRONG><a name="[6a]"></a>Balance</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, 6811.o(i.Balance))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Balance
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[28]"></a>CAN_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, can.o(i.CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CAN_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_recive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CAN_recive</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, can.o(i.CAN_recive))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>CAN_setup</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, can.o(i.CAN_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CAN_setup &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>CAN_start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, can.o(i.CAN_start))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>CAN_waitReady</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, can.o(i.CAN_waitReady))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>CAP</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, bat.o(i.CAP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CAP
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT
</UL>

<P><STRONG><a name="[5a]"></a>CHG_MOS</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bat.o(i.CHG_MOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CHG_MOS
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Protection_deal
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>CMD_init</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, 6811.o(i.CMD_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CMD_init &rArr; pec15
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CMD_init
</UL>

<P><STRONG><a name="[6e]"></a>CellVolt_Max_Min</STRONG> (Thumb, 156 bytes, Stack size 28 bytes, 6811.o(i.CellVolt_Max_Min))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CellVolt_Max_Min
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[52]"></a>Current_get</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, bat.o(i.Current_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Current_get
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT
</UL>

<P><STRONG><a name="[5e]"></a>DSG_MOS</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bat.o(i.DSG_MOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DSG_MOS
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Protection_deal
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>EE_Date_Read</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, bat.o(i.EE_Date_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EE_Date_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>EE_Date_Read_Check</STRONG> (Thumb, 260 bytes, Stack size 28 bytes, bat.o(i.EE_Date_Read_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EE_Date_Read_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>EE_Date_Save</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bat.o(i.EE_Date_Save))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>From_Temp_Get_RTCap</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, bat.o(i.From_Temp_Get_RTCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = From_Temp_Get_RTCap
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>GPIO_PinRead</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio_lpc17xx.o(i.GPIO_PinRead))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYSCAN
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>GPIO_PinWrite</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio_lpc17xx.o(i.GPIO_PinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_IRQHandler
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_6811_PutArray
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad_start
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHUTDOWN
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Protection_deal
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_light
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSG_MOS
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHG_MOS
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PutArray
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heat_MOS
</UL>

<P><STRONG><a name="[7c]"></a>GPIO_PortClock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio_lpc17xx.o(i.GPIO_PortClock))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>GPIO_SetDir</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio_lpc17xx.o(i.GPIO_SetDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>Heat_MOS</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bat.o(i.Heat_MOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Heat_MOS
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Protection_deal
</UL>

<P><STRONG><a name="[19]"></a>I2C0_IRQHandler</STRONG> (Thumb, 216 bytes, Stack size 36 bytes, i2c.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>IO_Init</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, io.o(i.IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IO_Init &rArr; GPIO_SetDir
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>KEYSCAN</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, io.o(i.KEYSCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KEYSCAN
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>LED</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, io.o(i.LED))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED &rArr; LED_light
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_light
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>LED_light</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, io.o(i.LED_light))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_light
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>LT68_NTC_Table_Lookup</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, 6811.o(i.LT68_NTC_Table_Lookup))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LT68_NTC_Table_Lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[66]"></a>LTC6811_CMD_init</STRONG> (Thumb, 284 bytes, Stack size 4 bytes, 6811.o(i.LTC6811_CMD_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LTC6811_CMD_init &rArr; CMD_init &rArr; pec15
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>LTC6811_Mission</STRONG> (Thumb, 3978 bytes, Stack size 40 bytes, 6811.o(i.LTC6811_Mission))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LTC6811_Mission &rArr; LTC6811_MoveData &rArr; pec15
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Writecmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_WeekIdle
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Sendcmd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Readcmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_MoveData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LT68_NTC_Table_Lookup
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CellVolt_Max_Min
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Balance
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>LTC6811_MoveData</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, 6811.o(i.LTC6811_MoveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LTC6811_MoveData &rArr; pec15
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[69]"></a>LTC6811_Readcmd</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, 6811.o(i.LTC6811_Readcmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LTC6811_Readcmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[6c]"></a>LTC6811_Sendcmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, 6811.o(i.LTC6811_Sendcmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[70]"></a>LTC6811_UartSend</STRONG> (Thumb, 2260 bytes, Stack size 40 bytes, 6811.o(i.LTC6811_UartSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LTC6811_UartSend &rArr; uart1_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>LTC6811_WeekIdle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, 6811.o(i.LTC6811_WeekIdle))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[6b]"></a>LTC6811_Writecmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, 6811.o(i.LTC6811_Writecmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[59]"></a>PIN_Configure</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, pin_lpc17xx.o(i.PIN_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_setup
</UL>

<P><STRONG><a name="[7b]"></a>PIN_ConfigureI2C0Pins</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pin_lpc17xx.o(i.PIN_ConfigureI2C0Pins))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[71]"></a>Protection_deal</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, bat.o(i.Protection_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Protection_deal &rArr; DSG_MOS
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSG_MOS
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHG_MOS
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heat_MOS
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>RTCGetTime</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, rtc.o(i.RTCGetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTCGetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>RTCInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rtc.o(i.RTCInit))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>RTCSetTime</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, rtc.o(i.RTCSetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTCSetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>RTCStart</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtc.o(i.RTCStart))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>RTC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>RTC_Send</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, rtc.o(i.RTC_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RTC_Send &rArr; uart1_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>Remain_CAP_Percent_get</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bat.o(i.Remain_CAP_Percent_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Remain_CAP_Percent_get
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT
</UL>

<P><STRONG><a name="[75]"></a>SHUTDOWN</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, io.o(i.SHUTDOWN))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SPI_6811_PutArray</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, spi.o(i.SPI_6811_PutArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_6811_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 6811.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>SPI_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, spi.o(i.SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPI_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, spi.o(i.SPI_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPI_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>SSP1_PutArray</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ssp1.o(i.SSP1_PutArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSP1_PutArray
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Write_FILTER
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Write_CONFIGURATION
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Write_CHANNEL
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_Read_DATA
</UL>

<P><STRONG><a name="[77]"></a>SSP1_init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ssp1.o(i.SSP1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SSP1_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SystemInit</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, system_lpc17xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>UART1_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, uart.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART2_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, uart.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART3_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, uart.o(i.UART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>ad_init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, ad.o(i.ad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ad_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>ad_start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ad.o(i.ad_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ad_start
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>i2c0_init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, i2c.o(i.i2c0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c0_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_ConfigureI2C0Pins
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>i2c0_start</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, i2c.o(i.i2c0_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c0_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>init_PEC15_Table</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, 6811.o(i.init_PEC15_Table))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_PEC15_Table
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>main</STRONG> (Thumb, 1428 bytes, Stack size 32 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = main &rArr; LTC6811_Mission &rArr; LTC6811_MoveData &rArr; pec15
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer3_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_PEC15_Table
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_start
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad_start
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHUTDOWN
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Send
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Protection_deal
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_UartSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CMD_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_light
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYSCAN
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortClock
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;From_Temp_Get_RTCap
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Date_Save
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Date_Read_Check
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Date_Read
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSG_MOS
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHG_MOS
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_waitReady
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_start
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_setup
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_UartSend
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Protect_Status_get_slow
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Array_Check
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_mission
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_UartSend
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5d]"></a>pec15</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, 6811.o(i.pec15))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pec15
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_MoveData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Mission
</UL>

<P><STRONG><a name="[80]"></a>timer3_init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, timer.o(i.timer3_init))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>uart1_init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, uart.o(i.uart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart1_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>uart1_send</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uart.o(i.uart1_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart1_send
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Send
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_UartSend
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_UartSend
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_UartSend
</UL>

<P><STRONG><a name="[7e]"></a>uart2_init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, uart.o(i.uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart2_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>uart3_init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, uart.o(i.uart3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart3_init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>uart3_send</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.uart3_send))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Send
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_UartSend
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_UartSend
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD7124_UartSend
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8f]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[8e]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, timer.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer3_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
